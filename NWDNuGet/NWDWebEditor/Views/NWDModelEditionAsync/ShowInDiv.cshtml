@using System.Reflection
@using NWDFoundation.WebEdition.Attributes
@using NWDFoundation.WebEdition.Enums
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "";
    string? tControllerName = ViewData["ControllerName"] as string;
    string? tModelToUse = ViewData["ModelToUse"] as string;
    Type? tModel = Type.GetType(tModelToUse ?? string.Empty);
    object? tResultToUse = ViewData["ResultToUse"];

    PropertyInfo? tReferenceProp = tModel?.GetProperty("Reference");
    string tReference = ((ulong)(tReferenceProp?.GetValue(tResultToUse) ?? 0)).ToString();
}

    <div class="card-body">
<div class="align-right">
    <a onclick="getRequestAndReplaceContent('@tControllerName', '@Url.Action("ModifyInDiv", tControllerName)?sReference=@tReference')" class="btn btn-sm btn-outline-secondary align-self-center">
        <i class="bi-pencil"></i>
    </a>
</div>
        @* <div>@tReference</div> *@
        @* @tModelToUse model  *@
        @foreach (PropertyInfo tProp in tModel?.GetProperties(BindingFlags.Public | BindingFlags.Instance)!)
        {
            if (tProp != null)
            {
                NWDWebPropertyDescriptionAttribute? tAttribute = tProp.GetCustomAttribute<NWDWebPropertyDescriptionAttribute>();
                ViewData["Attribute"] = tAttribute;
                ViewData["Item"] = tResultToUse;
                // object? tVa = tProp.GetValue(tResultToUse, null);
                @* <div>@tProp.Name : @tVa.ToString()</div> *@
                <partial name="_NWDWebEditionStyleSwitchShow" model="tProp"/>
            }
        }
        
    </div>
@Html.Raw("<script>"+(ViewData["Javascript"]as string ?? string.Empty)+"</script>")