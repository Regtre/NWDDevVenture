@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NWDWebRuntime.Configuration
@using NWDWebRuntime.Models
@using NWDWebRuntime.Tools
@using NWDWebStandard.Configuration
@using NWDWebStandard.Controllers

@inject IHttpContextAccessor HttpContextAccessor

@model NWDWebRuntime.Models.NWDAccountSignInMini

@if (HttpContextAccessor.HttpContext != null)
{
    @using (Html.BeginForm(nameof(NWDAccountController.SignInMini), NWDToolBox.GetController(@HttpContextAccessor.HttpContext)))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden(nameof(NWDAccountSignInMini.AccountSignInMiniController), NWDToolBox.GetController(@HttpContextAccessor.HttpContext))
        ;
        @Html.Hidden(nameof(NWDAccountSignInMini.AccountSignInMiniAction), NWDToolBox.GetAction(@HttpContextAccessor.HttpContext))
        ;
        <div class="row flex-center min-vh-100 py-6">
            <div class="col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4">
                <div class="card">
                    <div class="card-body p-4 p-sm-5">
                        <div class="row flex-between-center mb-2">
                            <div class="col-auto">
                                <h3>Account sign-in</h3>
                            </div>
                            <div class="col-auto fs--1 text-600">
                                <span class="mb-0 undefined">or</span>
                                <span>
                                    <a asp-area="" asp-controller="NWDAccount" asp-action="SignUpForm">Create an account</a>
                                </span>
                            </div>
                        </div>
                        @if (NWDWebStandardConfiguration.KConfig.AddAccountSignEmailPassword == true)
                        {
                            <div class="mb-3" aria-describedby="popoverAccountSignInMini_Email">
                                @Html.TextBoxFor(m => m.AccountSignInMiniEmail, new { @type="email", @class = "form-control", @placeholder = "Email" })
                                @Html.ValidationMessageFor(m => m.AccountSignInMiniEmail, null, new { @class = "hide-if-empty alert alert-warning mt-1 p-3 pt-1 pb-1" }, "div")
                            </div>
                            <div class="mb-3">
                                @Html.PasswordFor(m => m.AccountSignInMiniPassword, new { @class = "form-control", @placeholder = "Password" })
                                @Html.ValidationMessageFor(m => m.AccountSignInMiniPassword, null, new { @class = "hide-if-empty alert alert-warning mt-1 p-3 pt-1 pb-1" }, "div")
                            </div>
                            <div class="row flex-between-center">
                                <div class="col-auto">
                                    <div class="form-check mb-0">
                                        @Html.CheckBoxFor(m => m.AccountSignInMiniRememberMe, new { @class = "form-check-input" })
                                        @Html.LabelFor(m => m.AccountSignInMiniRememberMe, new { @class = "form-label" })
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <a class="fs--1" asp-area="" asp-controller="NWDAccount" asp-action="SignLostForm">Forgot password?</a>
                                </div>
                            </div>
                            <div class="mb-3">
                                <button class="btn btn-primary d-block w-100 mt-3" type="submit" id="@nameof(NWDAccountSignInMini)_Submit" name="@nameof(NWDAccountSignInMini)_Submit" disabled>Sign-in</button>
                            </div>
                        }
                        @if ((NWDWebStandardConfiguration.KConfig.AddAccountSignEmailPassword) && (NWDWebStandardConfiguration.KConfig.AddGoogleSign == true ||
                                                                                                   NWDWebStandardConfiguration.KConfig.AddFacebookSign == true ||
                                                                                                   NWDWebStandardConfiguration.KConfig.AddDiscordSign == true ||
                                                                                                   NWDWebStandardConfiguration.KConfig.AddAppleSign == true ||
                                                                                                   NWDWebStandardConfiguration.KConfig.AddMicrosoftSign == true ||
                                                                                                   NWDWebStandardConfiguration.KConfig.AddTwitterSign == true ||
                                                                                                   NWDWebStandardConfiguration.KConfig.AddLinkedInSign == true
                            ))
                        {
                            <div class="position-relative mt-4">
                                <hr class="bg-300">
                                <div class="divider-content-center">or sign-in with</div>
                            </div>
                        }
                        <div class="row g-2 mt-2">
                            @if (NWDWebStandardConfiguration.KConfig.AddGoogleSign == true)
                            {
                                <div class="col-sm-6">
                                    <a class="btn btn-outline-google-plus btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.GoogleOAuth_URL())"><span class="fab fa-google-plus-g me-2" data-fa-transform="grow-8"></span> Google</a>
                                </div>
                            }
                            @if (NWDWebStandardConfiguration.KConfig.AddFacebookSign == true)
                            {
                                <div class="col-sm-6">
                                    <a class="btn btn-outline-facebook btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.FacebookOAuth_URL())"><span class="fab fa-facebook-square me-2" data-fa-transform="grow-8"></span> Facebook</a>
                                </div>
                            }
                            @if (NWDWebStandardConfiguration.KConfig.AddDiscordSign == true)
                            {
                                <div class="col-sm-6">
                                    <a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.DiscordOAuth_URL())"><span class="fab fa-discord me-2" data-fa-transform="grow-8"></span> Discord</a>
                                </div>
                            }
                            @if (NWDWebStandardConfiguration.KConfig.AddAppleSign == true)
                            {
                                <div class="col-sm-6">
                                    <a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.AppleOAuth_URL())"><span class="fab fa-apple me-2" data-fa-transform="grow-8"></span> Apple</a>
                                </div>
                            }
                            @if (NWDWebStandardConfiguration.KConfig.AddMicrosoftSign == true)
                            {
                                <div class="col-sm-6">
                                    <a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.MicrosoftOAuth_URL())"><span class="fab fa-microsoft me-2" data-fa-transform="grow-8"></span> Microsoft</a>
                                </div>
                            }
                            @if (NWDWebStandardConfiguration.KConfig.AddTwitterSign == true)
                            {
                                <div class="col-sm-6">
                                    <a class="btn btn-outline-twitter btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.TwitterOAuth_URL())"><span class="fab fa-twitter me-2" data-fa-transform="grow-8"></span> Twitter</a>
                                </div>
                            }
                            @if (NWDWebStandardConfiguration.KConfig.AddLinkedInSign == true)
                            {
                                <div class="col-sm-6">
                                    <a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.LinkedInOAuth_URL())"><span class="fab fa-linkedin me-2" data-fa-transform="grow-8"></span> LinkedIn</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
<script>function @NWDAccountSignInMini.K_JavaScriptFunction () {
        if (
            $('#@nameof(NWDAccountSignInMini.AccountSignInMiniEmail)').val().length != 0
            && $('#@nameof(NWDAccountSignInMini.AccountSignInMiniPassword)').val().length != 0
        ) {
            $('#@nameof(NWDAccountSignInMini)_Submit').attr('disabled', false);
        }
        else {
            $('#@nameof(NWDAccountSignInMini)_Submit').attr('disabled', true);
        }
    }
    $(document).ready(function () {
        $('#@nameof(NWDAccountSignInMini)_Submit').attr('disabled', true);
        $('#@nameof(NWDAccountSignInMini.AccountSignInMiniEmail)').keyup(function () { @NWDAccountSignInMini.K_JavaScriptFunction  (); });
        $('#@nameof(NWDAccountSignInMini.AccountSignInMiniPassword)').keyup(function () { @NWDAccountSignInMini.K_JavaScriptFunction  (); });
        
        $('#@nameof(NWDAccountSignInMini.AccountSignInMiniEmail)').change(function () { @NWDAccountSignInMini.K_JavaScriptFunction  (); });
        $('#@nameof(NWDAccountSignInMini.AccountSignInMiniPassword)').change(function () { @NWDAccountSignInMini.K_JavaScriptFunction  (); });
        
        $('#@nameof(NWDAccountSignInMini.AccountSignInMiniEmail)').click(function () { @NWDAccountSignInMini.K_JavaScriptFunction  (); });
        $('#@nameof(NWDAccountSignInMini.AccountSignInMiniPassword)').click(function () { @NWDAccountSignInMini.K_JavaScriptFunction  (); });
        
        @NWDAccountSignInMini.K_JavaScriptFunction  ();
        
        setTimeout("@NWDAccountSignInMini.K_JavaScriptFunction ()", "3000");
    });</script>