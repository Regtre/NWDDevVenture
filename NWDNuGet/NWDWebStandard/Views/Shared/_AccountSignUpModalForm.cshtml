@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NWDWebRuntime.Configuration
@using NWDWebRuntime.Managers
@using NWDWebRuntime.Models
@using NWDWebRuntime.Tools
@using NWDWebStandard.Configuration
@using NWDWebStandard.Controllers

@inject IHttpContextAccessor HttpContextAccessor

@model NWDWebRuntime.Models.NWDAccountSignUpModal

<div class="modal fade" id="AccountSignUpModalDiv" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document" style="max-width: 800px">
        <div class="modal-content position-relative">
            <div class="position-absolute top-0 end-0 mt-2 me-2 z-index-1">
                <button class="btn-close btn btn-sm btn-circle d-flex flex-center transition-base" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @if (NWDAccountWebManager.AccountIsConnected(@HttpContextAccessor.HttpContext) == true)
            {
                <div class="modal-body p-0">
                    @*await Html.RenderPartialAsync(AccountController._AccountSignInAlreadyConnected);*@
                    <div class="rounded-top-lg py-3 ps-4 pe-6 bg-light">
                        <h4 class="mb-1">You are already authentified!</h4>
                    </div>
                </div>
                <div class="modal-footer">
                </div>
            }
            else
            {
        <div class="modal-body p-0">
            @*<div class="rounded-top-lg py-3 ps-4 pe-6 bg-light">
            <h4 class="mb-1">Authentification</h4>
        </div>*@
            @if (@HttpContextAccessor.HttpContext!= null)
            {
        
                @using (Html.BeginForm(nameof(NWDAccountController.SignUpModal), NWDToolBox.GetController(@HttpContextAccessor.HttpContext)))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden(nameof(NWDAccountSignUpModal.AccountSignUpModalController), NWDToolBox.GetController(@HttpContextAccessor.HttpContext))
                    @Html.Hidden(nameof(NWDAccountSignUpModal.AccountSignUpModalAction), NWDToolBox.GetAction(@HttpContextAccessor.HttpContext))
                    <div class="row g-0 h-100">
                        <div class="col-md-5 text-center bg-primary rounded-top">
                            <div class="position-relative p-4 pt-md-5 pb-md-7 light">
                                <div class="bg-holder background-half-circle  background-animated"></div>
                                <div class="z-index-1 position-relative">
                                    <a class="link-light mb-3 font-sans-serif fs-1 d-inline-block fw-bolder" href="~/">@NWDWebStandardConfiguration.KConfig.WebSiteShortName</a>
                                    <p class="opacity-75 text-white">@NWDWebStandardConfiguration.KConfig.SignHook</p>
                                </div>
                            </div>
                            <div class="mt-3 mb-4 mt-md-4 mb-md-5 light">
                                <p class="pt-3 text-white">Have an account?<br><a class="btn btn-outline-light mt-2 px-4" asp-area="" asp-controller="NWDAccount" asp-action="SignInForm">Sign-in</a></p>
                                <p class="mb-0 mt-4 mt-md-5 fs--1 fw-semi-bold text-white opacity-75">
                                    Read our <a class="text-decoration-underline text-white" asp-area="" asp-controller="NWDPrivacy" asp-action="TermsOfService">terms of service</a> and <a class="text-decoration-underline text-white" asp-area="" asp-controller="NWDPrivacy" asp-action="TermsAndConditions"> conditions</a>. <br />
                                    We respect your <a class="text-decoration-underline text-white" asp-area="" asp-controller="NWDPrivacy" asp-action="PrivacyPolicy">privacy </a>
                                </p>
                            </div>
                        </div>

                        <div class="col-md-7 d-flex flex-center">
                            <div class="p-4 p-md-5 flex-grow-1">
                                <div class="row flex-between-center">
                                    <div class="col-auto">
                                        <h3>Account sign-up</h3>
                                    </div>
                                </div>
                                @if (NWDWebStandardConfiguration.KConfig.AddAccountSignEmailPassword == true)
                                {
                                    <div class="mb-3">
                                        @Html.LabelFor(m => m.AccountSignUpModalEmail, new { @class = "form-label" })
                                        @Html.TextBoxFor(m => m.AccountSignUpModalEmail, new { @type="email", @class = "form-control", @placeholder = "email" })
                                        @Html.ValidationMessageFor(m => m.AccountSignUpModalEmail, null, new { @class = "hide-if-empty alert alert-warning mt-1 p-3 pt-1 pb-1" }, "div")
                                    </div>
                                    <div class="row gx-2">
                                        <div class="mb-3 col-sm-6">
                                            @Html.LabelFor(m => m.AccountSignUpModalPassword, new { @class = "form-label" })
                                            @Html.PasswordFor(m => m.AccountSignUpModalPassword, new { @class = "form-control", @placeholder = "password" })
                                        </div>
                                        <div class="mb-3 col-sm-6">
                                            @Html.LabelFor(m => m.AccountSignUpModalPasswordConfirm, new { @class = "form-label" })
                                            @Html.PasswordFor(m => m.AccountSignUpModalPasswordConfirm, new { @class = "form-control", @placeholder = "confirm password" })
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.AccountSignUpModalPassword, null, new { @class = "hide-if-empty alert alert-warning mt-1 p-3 pt-1 pb-1" }, "div")
                                    @Html.ValidationMessageFor(m => m.AccountSignUpModalPasswordConfirm, null, new { @class = "hide-if-empty alert alert-warning mt-1 p-3 pt-1 pb-1" }, "div")
                                    <div class="form-check">
                                        @Html.CheckBoxFor(m => m.AccountSignUpModalChecked, new { @class = "form-check-input" })
                                        <label class="form-label" for="@Html.Raw(nameof(NWDAccountSignUpModal.AccountSignUpModalChecked))">I accept the <a asp-area="" asp-controller="NWDPrivacy" asp-action="TermsOfService">terms </a>and <a asp-area="" asp-controller="NWDPrivacy" asp-action="TermsAndConditions">conditions</a></label>

                                        @Html.ValidationMessageFor(m => m.AccountSignUpModalChecked, null, new { @class = "hide-if-empty alert alert-warning mt-1 p-3 pt-1 pb-1" }, "div")
                                    </div>
                                    <div class="form-check ">
                                        @Html.CheckBoxFor(m => m.AccountSignUpModalRememberMe, new { @class = "form-check-input" })
                                        @Html.LabelFor(m => m.AccountSignUpModalRememberMe, new { @class = "form-label" })
                                    </div>
                                    <div class="mb-3">
                                        <button class="btn btn-primary d-block w-100 mt-3" type="submit" id="@nameof(NWDAccountSignUpModal)_Submit" name="@nameof(NWDAccountSignUpModal)_Submit" disabled>Register</button>
                                    </div>
                                }
                                @if ((NWDWebStandardConfiguration.KConfig.AddAccountSignEmailPassword) && (NWDWebStandardConfiguration.KConfig.AddGoogleSign == true ||
                                                                                                           NWDWebStandardConfiguration.KConfig.AddFacebookSign == true ||
                                                                                                           NWDWebStandardConfiguration.KConfig.AddDiscordSign == true ||
                                                                                                           NWDWebStandardConfiguration.KConfig.AddAppleSign == true ||
                                                                                                           NWDWebStandardConfiguration.KConfig.AddMicrosoftSign == true ||
                                                                                                           NWDWebStandardConfiguration.KConfig.AddTwitterSign == true ||
                                                                                                           NWDWebStandardConfiguration.KConfig.AddLinkedInSign == true
                           ))
                                {
                                    <div class="position-relative mt-4">
                                        <hr class="bg-300">
                                        <div class="divider-content-center">or sign-up with</div>
                                    </div>
                                }
                                <div class="row g-2 mt-2">
                                    @if (NWDWebStandardConfiguration.KConfig.AddGoogleSign == true)
                                    {
                                        <div class="col-sm-6"><a class="btn btn-outline-google-plus btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.GoogleOAuth_URL())"><span class="fab fa-google-plus-g me-2" data-fa-transform="grow-8"></span> Google</a></div>
                                    }
                                    @if (NWDWebStandardConfiguration.KConfig.AddFacebookSign == true)
                                    {
                                        <div class="col-sm-6"><a class="btn btn-outline-facebook btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.FacebookOAuth_URL())"><span class="fab fa-facebook-square me-2" data-fa-transform="grow-8"></span> Facebook</a></div>
                                    }
                                    @if (NWDWebStandardConfiguration.KConfig.AddDiscordSign == true)
                                    {
                                        <div class="col-sm-6"><a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.DiscordOAuth_URL())"><span class="fab fa-discord me-2" data-fa-transform="grow-8"></span> Discord</a></div>
                                    }
                                    @if (NWDWebStandardConfiguration.KConfig.AddAppleSign == true)
                                    {
                                        <div class="col-sm-6"><a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.AppleOAuth_URL())"><span class="fab fa-apple me-2" data-fa-transform="grow-8"></span> Apple</a></div>
                                    }
                                    @if (NWDWebStandardConfiguration.KConfig.AddMicrosoftSign == true)
                                    {
                                        <div class="col-sm-6"><a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.MicrosoftOAuth_URL())"><span class="fab fa-microsoft me-2" data-fa-transform="grow-8"></span> Microsoft</a></div>
                                    }
                                    @if (NWDWebStandardConfiguration.KConfig.AddTwitterSign == true)
                                    {
                                        <div class="col-sm-6"><a class="btn btn-outline-twitter btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.TwitterOAuth_URL())"><span class="fab fa-twitter me-2" data-fa-transform="grow-8"></span> Twitter</a></div>
                                    }
                                    @if (NWDWebStandardConfiguration.KConfig.AddLinkedInSign == true)
                                    {
                                        <div class="col-sm-6"><a class="btn btn-outline-secondary btn-sm d-block w-100" href="@Html.Raw(NWDAccountController.LinkedInOAuth_URL())"><span class="fab fa-linkedin me-2" data-fa-transform="grow-8"></span> LinkedIn</a></div>
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                }
                            
            }
        <script>function @NWDAccountSignUpModal.K_JavaScriptFunction () {
                    if (
                        $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalEmail)').val().length != 0
                        && $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPassword)').val().length != 0
                        && $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPasswordConfirm)').val().length != 0
                        && $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalChecked)')[0].checked == true
                    ) {
                        $('#@nameof(NWDAccountSignUpModal)_Submit').attr('disabled', false);
                    }
                    else {
                        $('#@nameof(NWDAccountSignUpModal)_Submit').attr('disabled', true);
                    }
                }
                $(document).ready(function () {
                    $('#@nameof(NWDAccountSignUpModal)_Submit').attr('disabled', true);
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalEmail)').keyup(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPassword)').keyup(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPasswordConfirm)').keyup(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    
                    document.getElementById('@nameof(NWDAccountSignUpModal.AccountSignUpModalChecked)').addEventListener('click', event => { @NWDAccountSignUpModal.K_JavaScriptFunction (); });
                    
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalEmail)').change(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPassword)').change(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPasswordConfirm)').change(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    
                    
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalEmail)').click(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPassword)').click(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    $('#@nameof(NWDAccountSignUpModal.AccountSignUpModalPasswordConfirm)').click(function () { @NWDAccountSignUpModal.K_JavaScriptFunction ();  });
                    
                    @NWDAccountSignUpModal.K_JavaScriptFunction (); 
                    
                    setTimeout("@NWDAccountSignUpModal.K_JavaScriptFunction ()", "3000");
                });</script>
        </div>
            }
        </div>
    </div>
</div>